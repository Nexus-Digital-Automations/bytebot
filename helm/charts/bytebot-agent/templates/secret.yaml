{{/*
Comprehensive Secrets Management for Bytebot Agent
Supports multiple secret sources and enterprise-grade security practices
*/}}

{{- $createSecret := false -}}
{{- if or .Values.env.ANTHROPIC_API_KEY .Values.env.OPENAI_API_KEY .Values.env.GEMINI_API_KEY -}}
  {{- $createSecret = true -}}
{{- else if and (not .Values.apiKeys.anthropic.useExisting) .Values.apiKeys.anthropic.value -}}
  {{- $createSecret = true -}}
{{- else if and (not .Values.apiKeys.openai.useExisting) .Values.apiKeys.openai.value -}}
  {{- $createSecret = true -}}
{{- else if and (not .Values.apiKeys.gemini.useExisting) .Values.apiKeys.gemini.value -}}
  {{- $createSecret = true -}}
{{- else if or .Values.secrets.jwtSecret .Values.secrets.encryptionKey -}}
  {{- $createSecret = true -}}
{{- end -}}

{{- if $createSecret -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bytebot-agent.fullname" . }}-secrets
  labels:
    {{- include "bytebot-agent.labels" . | nindent 4 }}
    config.bytebot.ai/type: "application-secrets"
  annotations:
    config.bytebot.ai/environment: {{ .Values.global.environment | default "production" }}
    config.bytebot.ai/rotation-policy: {{ .Values.secrets.rotationPolicy | default "manual" }}
    config.bytebot.ai/created: {{ now | date "2006-01-02T15:04:05Z" }}
    {{- if .Values.secrets.rotationEnabled }}
    config.bytebot.ai/rotation-interval: {{ .Values.secrets.rotationInterval | default "30d" }}
    {{- end }}
type: Opaque
data:
  {{- /* JWT and Encryption Secrets */ -}}
  {{- if .Values.secrets.jwtSecret }}
  jwt-secret: {{ .Values.secrets.jwtSecret | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.secrets.encryptionKey }}
  encryption-key: {{ .Values.secrets.encryptionKey | b64enc | quote }}
  {{- end }}
  
  {{- /* LLM API Keys - Support legacy values for backward compatibility */ -}}
  {{- if .Values.env.ANTHROPIC_API_KEY }}
  anthropic-api-key: {{ .Values.env.ANTHROPIC_API_KEY | b64enc | quote }}
  {{- else if and (not .Values.apiKeys.anthropic.useExisting) .Values.apiKeys.anthropic.value }}
  anthropic-api-key: {{ .Values.apiKeys.anthropic.value | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.env.OPENAI_API_KEY }}
  openai-api-key: {{ .Values.env.OPENAI_API_KEY | b64enc | quote }}
  {{- else if and (not .Values.apiKeys.openai.useExisting) .Values.apiKeys.openai.value }}
  openai-api-key: {{ .Values.apiKeys.openai.value | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.env.GEMINI_API_KEY }}
  gemini-api-key: {{ .Values.env.GEMINI_API_KEY | b64enc | quote }}
  {{- else if and (not .Values.apiKeys.gemini.useExisting) .Values.apiKeys.gemini.value }}
  gemini-api-key: {{ .Values.apiKeys.gemini.value | b64enc | quote }}
  {{- end }}
  
  {{- /* Database Secrets */ -}}
  {{- if .Values.secrets.databaseUrl }}
  database-url: {{ .Values.secrets.databaseUrl | b64enc | quote }}
  {{- end }}
  
  {{- /* External Service Secrets */ -}}
  {{- if .Values.secrets.analyticsApiKey }}
  analytics-api-key: {{ .Values.secrets.analyticsApiKey | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.secrets.webhookSecret }}
  webhook-secret: {{ .Values.secrets.webhookSecret | b64enc | quote }}
  {{- end }}
{{- end }}

---
{{/*
TLS Secret for HTTPS/TLS Termination
Only created if TLS configuration is provided
*/}}
{{- if and .Values.tls.enabled .Values.tls.certificate .Values.tls.privateKey -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bytebot-agent.fullname" . }}-tls
  labels:
    {{- include "bytebot-agent.labels" . | nindent 4 }}
    config.bytebot.ai/type: "tls-certificate"
  annotations:
    config.bytebot.ai/certificate-expiry: {{ .Values.tls.certificateExpiry | default "unknown" }}
    config.bytebot.ai/auto-renewal: {{ .Values.tls.autoRenewal | default "false" }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.tls.certificate | b64enc | quote }}
  tls.key: {{ .Values.tls.privateKey | b64enc | quote }}
  {{- if .Values.tls.caCertificate }}
  ca.crt: {{ .Values.tls.caCertificate | b64enc | quote }}
  {{- end }}
{{- end }}

---
{{/*
Docker Registry Secret for Private Image Pulling
Only created if registry credentials are provided
*/}}
{{- if and .Values.imageCredentials.registry .Values.imageCredentials.username .Values.imageCredentials.password -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "bytebot-agent.fullname" . }}-registry
  labels:
    {{- include "bytebot-agent.labels" . | nindent 4 }}
    config.bytebot.ai/type: "docker-registry"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" .Values.imageCredentials.registry .Values.imageCredentials.username .Values.imageCredentials.password (printf "%s:%s" .Values.imageCredentials.username .Values.imageCredentials.password | b64enc) | b64enc | quote }}
{{- end }}